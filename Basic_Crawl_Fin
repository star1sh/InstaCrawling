import matplotlib
from selenium import webdriver
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
import time
import re
import pandas as pd

# step2.아이디, 비밀번호 설정
id = ""
pw = ""

keyword = input("검색어를 입력하세요:")
url = "https://www.instagram.com/explore/tags/"+ keyword 

# step3.크롬 웹드라이버 실행
driver = webdriver.Chrome(r"C:\Users\hagae\Desktop\instagram_Crawler\chromedriver.exe")
FIRST_IMG_CSS = "div.v1Nh3.KIKUG._bz0w"
# step4.인스타그램 로그인 함수 정의
def login(id, pw):
    # 로그인 페이지로 이동
    driver.get("https://www.instagram.com/accounts/login/")
    time.sleep(1)
    
    # id와 pw를 입력하는 창의 요소 정보 획득
    input = driver.find_elements(By.TAG_NAME,"input")

    # 아이디를 입력
    input[0].send_keys(id)

    # 비밀번호 입력
    input[1].send_keys(pw)

    # 엔터
    input[1].send_keys(Keys.RETURN)
    time.sleep(5)

    # 로그인 정보 저장 여부 팝업창 제거 ("나중에 하기 버튼 클릭")
    btn_later1 = driver.find_element(By.CLASS_NAME,'_ac8f')
    btn_later1.click()
    time.sleep(5)

    # 알림 설정 팝업창 제거 ("나중에 하기 버튼 클릭")
    btn_later2 = driver.find_element(By.CLASS_NAME,'_a9--._a9_1')
    btn_later2.click()

#첫번째 이미지 클릭
def click_first_image(driver):
    try:
        driver.find_elements(By.CLASS_NAME, '_aabd _aa8k  _al3l').click()
        is_first_img_click_success = True
    except:
        is_first_img_click_success = False

    return is_first_img_click_success



# step5.로그인 함수 실행
login(id,pw)

time.sleep(10)

driver.get(url)

time.sleep(10)

first_img_css = 'div._ac7v._aang > div._aabd._aa8k._aanf'

time.sleep(10)

# step6. 첫번째 게시물 클릭
post = driver.find_elements(By.CSS_SELECTOR,"div._aagw")
post[0].click()
time.sleep(10)

#다음 게시물로 이동
def move_next(driver):
    right = driver.find_element(By.CSS_SELECTOR,"div._aaqg._aaqh")
    right.click()
    time.sleep(3)

from bs4 import BeautifulSoup

# step7. 좋아요 등의 컨텐츠 정보 가져오기
def get_content(driver):
    html = driver.page_source
    soup = BeautifulSoup(html, 'lxml')
    try:
        content = soup.select('div._a9zs')[0].text
    except:
        content=''
    
    tags = re.findall(r'#[^\s#,\\]+', content)

    date = soup.select('time._aaqe')[0]['datetime'][:10]

    try:
        like = soup.select('div._aacl._aaco._aacx._aada._aade')[0].findAll('span')[-1].text
    except:
        like = 0
    
    try:
        place = soup.select('div._aaqm')[0].text

    except:
        place = ''
    data = [content, date, like, place,tags]
    return data

instgram_tags = []
#data = driver.find_element(By.CSS_SELECTOR, '.C7I1f.X7jcj')
#tag_raw = data.text
#tags = re.findall(r'#[^\s#,\\]+', tag_raw)
#tag = ''.join(tags).replace("#"," ")

#tag_data = tag.split()

#for tag_one in tag_data:
    #instgram_tags.append(tag_one)
#print(instgram_tags)
target = 30
for i in range(target):
        time.sleep(1)
        html = driver.page_source
        soup = BeautifulSoup(html, 'lxml')
        content = soup.select('div._a9zs')[0].text
        #data = driver.find_element(By.CLASS_NAME, '.C7I1f.X7jcj')
        #tag_raw = data.text
        tags = re.findall(r'#[^\s#,\\]+', content)
        tag = ''.join(tags).replace("#"," ")

        tag_data = tag.split(',')

        for tag_one in tag_data:
            instgram_tags.append(tag_one)
        print(instgram_tags)
        #data = get_content(driver)
        #results.append(data)
        move_next(driver)

        time.sleep(5)  
driver.close()

# data = get_content(driver)
# results.append(data)

#print(results)

import pandas as pd
from datetime import datetime

#date = datetime.today().strftime('%Y-%m-%d')

#results_df = pd.DataFrame(results)
#results_df.colums = ['content','date','like','place','tags']
#results_df.to_excel(date + '_about' + keyword+' insta crawling.xlsx')

# step8.의미없는 태그 검색내용 결과데이터에서 제외
stop_words = ['맞팔' , '좋아요', '좋반', '유머스타그램', '좋아요반사','선팔','첫줄반사']
instagram_tags = [word for word in instgram_tags if word not in stop_words]


print(instagram_tags)
time.sleep(5)

#from collections import Counter
#count = Counter(instgram_tags)
#common_tag_200 = count.most_common(10)

# step9. 워드클라우드 시각화자료 생성
from PIL import Image
from wordcloud import WordCloud
import matplotlib.pyplot as plt
import numpy as np
import matplotlib

matplotlib.rcParams['font.family'] = "Maulgun Gothic"
font_path = "C:/Windows/Fonts/NanumGothic.ttf"

wc = WordCloud(font_path = font_path, width=1000, height=600, background_color="white", random_state=0 )
plt.imshow(wc.generate_from_text(" ".join(instgram_tags)))
plt.axis("off")
plt.show()
